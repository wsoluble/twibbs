version: "3.8"

services:

  db_master:
    container_name: 'db_master'
    build:
      context: ./project/db_master
      dockerfile: Dockerfile
    restart: always
    hostname: ${MYSQL_HOST_NAME_MASTER}
    networks:
      - dapp_ns
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_SPIDER_PASSWORD: ${MYSQL_SPIDER_PASSWORD}
      MYSQL_HOST_NAME_MASTER: ${MYSQL_HOST_NAME_MASTER}
      MYSQL_HOST_NAME_SPIDER: ${MYSQL_HOST_NAME_SPIDER}
    volumes:
      - type: bind
        source: ./project/db_master/initdb
        target: /docker-entrypoint-initdb.d
        volume:
          nocopy: true
      - type: bind
        source: ./project/db_master/conf/my.cnf
        target: /etc/mysql/conf.d/my.cnf
        volume:
          nocopy: true
      - type: bind
        source: ./logs/db_master
        target: /var/log/mysql
        volume:
          nocopy: true
      #- type: bind
      #  source: ./project/db_spider/data
      #  target: /var/lib/mysql

  db_spider:
    container_name: 'db_spider'
    build:
      context: ./project/db_spider
      dockerfile: Dockerfile
    restart: always
    hostname: ${MYSQL_HOST_NAME_SPIDER}
    networks:
      - dapp_ns
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_SPIDER_PASSWORD: ${MYSQL_SPIDER_PASSWORD}
      MYSQL_HOST_NAME_MASTER: ${MYSQL_HOST_NAME_MASTER}
      MYSQL_HOST_NAME_SPIDER: ${MYSQL_HOST_NAME_SPIDER}
    volumes:
      - type: bind
        source: ./project/db_spider/initdb
        target: /docker-entrypoint-initdb.d
        volume:
          nocopy: true
      - type: bind
        source: ./project/db_spider/conf/my.cnf
        target: /etc/mysql/conf.d/my.cnf
        volume:
          nocopy: true
      - type: bind
        source: ./logs/db_spider
        target: /var/log/mysql
        volume:
          nocopy: true
      - type: bind
        source: ./logs/initdb
        target: /var/log/initdb
        volume:
          nocopy: true
      #- type: bind
      #  source: ./project/db_spider/data
      #  target: /var/lib/mysql
    depends_on:
      - db_master

  web:
    container_name: 'web'
    build:
      context: ./project/web
      dockerfile: Dockerfile
    restart: always
    hostname: web-server
    networks:
      - dapp_ns
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_HOST_NAME_SPIDER: ${MYSQL_HOST_NAME_SPIDER}
    ports:
      - 9080:80
    volumes:
      - type: bind
        source: ./project/web/public
        target: /var/www/public
        volume:
          nocopy: true
      - type: bind
        source: ./project/web/app
        target: /var/www/app
        volume:
          nocopy: true
      - type: bind
        source: ./logs/web
        target: /var/log/apache2
        volume:
          nocopy: true
    depends_on:
      - db_spider

  phpmyadmin:
    container_name: 'phpmyadmin'
    image: 'phpmyadmin:5.1.0'
    restart: always
    networks:
      - dapp_ns
    ports:
      - 9081:80
    environment:
      - PMA_HOSTS=${MYSQL_HOST_NAME_MASTER},${MYSQL_HOST_NAME_SPIDER}
      - PMA_ARBITRARY=-1
    depends_on:
      - web

networks:
  dapp_ns:
    driver: bridge